{"ast":null,"code":"var _jsxFileName = \"/Users/ijong-won/react-firebase-chat-app/src/components/RegisterPage/RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterPage() {\n  _s();\n\n  const {\n    register,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const password = useRef();\n  console.log(watch('email'));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        ...register('email', {\n          required: true,\n          pattern: /^S+@\\S+$/i\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This email field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        ...register('name', {\n          required: true,\n          maxLength: 10\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), errors.name && errors.name.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This name field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), errors.name && errors.name.type === 'maxLength' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your input exceed maximum length\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        ...register('name', {\n          required: true,\n          minLength: 6\n        }),\n        ref: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), errors.password && errors.password.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This password field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), errors.password && errors.password.type === 'minLength' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Password must have at least 6 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password_confirm\",\n        type: \"password\",\n        ...register('name', {\n          required: true,\n          validate: value => value === password.current\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        style: {\n          color: 'gray',\n          textDecoration: 'none'\n        },\n        to: \"/login\",\n        children: \"\\uC774\\uBBF8 \\uC544\\uB514\\uB514\\uAC00 \\uC788\\uB2E4\\uBA74...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterPage, \"BQ9PZlp/4tWQDi64t5G8Zc4AgI8=\", false, function () {\n  return [useForm];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/Users/ijong-won/react-firebase-chat-app/src/components/RegisterPage/RegisterPage.js"],"names":["React","useRef","Link","useForm","RegisterPage","register","watch","formState","errors","password","console","log","textAlign","required","pattern","email","maxLength","name","type","minLength","validate","value","current","color","textDecoration"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\n\nfunction RegisterPage() {\n  const {\n    register,\n    watch,\n    formState: { errors },\n  } = useForm();\n\n  const password = useRef();\n\n  console.log(watch('email'));\n\n  return (\n    <div className=\"auth-wrapper\">\n      <div style={{ textAlign: 'center' }}>\n        <h3>Register</h3>\n      </div>\n      <form>\n        <label>Email</label>\n        <input\n          name=\"email\"\n          type=\"email\"\n          {...register('email', { required: true, pattern: /^S+@\\S+$/i })}\n        />\n        {errors.email && <p>This email field is required</p>}\n        <label>Name</label>\n        <input\n          name=\"name\"\n          {...register('name', { required: true, maxLength: 10 })}\n        />\n        {errors.name && errors.name.type === 'required' && (\n          <p>This name field is required</p>\n        )}\n        {errors.name && errors.name.type === 'maxLength' && (\n          <p>Your input exceed maximum length</p>\n        )}\n        <label>Password</label>\n        <input\n          name=\"password\"\n          type=\"password\"\n          {...register('name', { required: true, minLength: 6 })}\n          ref={password}\n        />\n        {errors.password && errors.password.type === 'required' && (\n          <p>This password field is required</p>\n        )}\n        {errors.password && errors.password.type === 'minLength' && (\n          <p>Password must have at least 6 characters</p>\n        )}\n        <label>Password Confirm</label>\n        <input\n          name=\"password_confirm\"\n          type=\"password\"\n          {...register('name', {\n            required: true,\n            validate: (value) => value === password.current,\n          })}\n        />\n        <input type=\"submit\" />\n        <Link style={{ color: 'gray', textDecoration: 'none' }} to=\"/login\">\n          이미 아디디가 있다면...\n        </Link>\n      </form>\n    </div>\n  );\n}\n\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}